# -*- coding: utf-8 -*-
"""K-means delivery_fee

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1S7uKDcZIA3VlIPhm4EERHrtoMEaujGXF
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
from sklearn.preprocessing import MinMaxScaler

#membuat dataset
do=pd.read_csv ('data_orderan.csv')
do.head()

#preprocessing data
do.info()
x = do.loc[:,['delivery_fee']].values
print(x)

#Menggunakan metode elbow untuk menentukan angka cluster
wcss = []
for i in range(1,10):
    kmeans=KMeans(n_clusters=i,init='k-means++', random_state=42)
    kmeans.fit(x)
    wcss.append(kmeans.inertia_)
plt.plot(range(1,10),wcss)
plt.title('Metode Elbow')
plt.xlabel('Jumlah Clusters')
plt.ylabel('WCSS')
plt.show()

#Berdasarkan metode elbow, jumlah cluster ditentukan dari titik patahan paling signifikan dari representasi grafik
#Dipilih 3 cluster
#Menjalankan K-Means Clustering ke dataset
kmeans=KMeans(n_clusters=3,init='k-means++',random_state=42)
y_kmeans=kmeans.fit_predict(x)
print(kmeans.cluster_centers_)

#Visualisasi hasil clusters
fig,ax = plt.subplots()
plt.scatter(x[y_kmeans == 2, 0], x[y_kmeans == 2, 0], s = 50, c = 'green', label = 'Cluster 1(rendah)')
plt.scatter(x[y_kmeans == 0, 0], x[y_kmeans == 0, 0], s = 50, c = 'yellow', label = 'Cluster 2(sedang)')
plt.scatter(x[y_kmeans == 1, 0], x[y_kmeans == 1, 0], s = 50, c = 'blue', label = 'Cluster 3(tinggi)')
plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 0], s = 200, c = 'Red', label = 'Centroids')
plt.title('Hasil Klustering K-Means Delivery Fee')
plt.legend()
plt.show()